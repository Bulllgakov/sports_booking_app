#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –¢-–ë–∞–Ω–∫ –ú—É–ª—å—Ç–∏—Ä–∞—Å—á–µ—Ç—ã
 * –ó–∞–ø—É—Å–∫: node test-tbank-multiaccounts.js
 */

const axios = require('axios');
const crypto = require('crypto');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å—Ä–µ–¥—ã
const config = {
  terminalKey: '1755339010178',
  terminalKeyE2C: '1755339010178E2C',
  password: 'D7SfdvJY5zq7fm=W',
  tokenPassword: 'V*F&Snl4*Kud%kGR',
  apiUrl: 'https://rest-api-test.tinkoff.ru/v2/',
  username: 'All_Court_booking'
};

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ –∑–∞–ø—Ä–æ—Å–∞
function generateToken(params, password) {
  const paramsWithPassword = { ...params, Password: password };
  const sortedKeys = Object.keys(paramsWithPassword).sort();
  const concatenated = sortedKeys.map(key => paramsWithPassword[key]).join('');
  return crypto.createHash('sha256').update(concatenated).digest('hex');
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É–º–º—ã –≤ –∫–æ–ø–µ–π–∫–∏
function formatAmountForTBank(amount) {
  return Math.round(amount * 100);
}

// 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
async function checkAPIConnection() {
  console.log('\nüì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API –¢-–ë–∞–Ω–∫–∞...\n');
  
  try {
    const response = await axios.get(config.apiUrl, {
      timeout: 10000,
      validateStatus: () => true // –ü—Ä–∏–Ω–∏–º–∞–µ–º –ª—é–±–æ–π —Å—Ç–∞—Ç—É—Å
    });
    
    console.log('‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log(`   URL: ${config.apiUrl}`);
    console.log(`   Status: ${response.status}`);
    console.log(`   Headers:`, response.headers['content-type']);
    return true;
  } catch (error) {
    console.error('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    console.error(`   Error: ${error.message}`);
    return false;
  }
}

// 2. –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª—É–±–∞
async function testRegisterShop() {
  console.log('\nüè™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª—É–±–∞ –≤ –º—É–ª—å—Ç–∏—Ä–∞—Å—á–µ—Ç–∞—Ö...\n');
  
  const shopData = {
    ShopCode: `test_club_${Date.now()}`,
    Name: '–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª—É–± AllCourt',
    Inn: '7710140679', // –¢–µ—Å—Ç–æ–≤—ã–π –ò–ù–ù
    Email: 'test@allcourt.ru',
    Phones: '+79999999999',
    Account: '40702810400000000001', // –¢–µ—Å—Ç–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç
    BankBik: '044525225', // –ë–ò–ö –°–±–µ—Ä–±–∞–Ω–∫–∞
    LegalAddress: '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 1',
    DirectorName: '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á'
  };

  try {
    const requestData = {
      TerminalKey: config.terminalKeyE2C,
      ...shopData
    };
    
    const token = generateToken(requestData, config.tokenPassword);
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–ª—É–±–∞:');
    console.log(`   ShopCode: ${shopData.ShopCode}`);
    console.log(`   Name: ${shopData.Name}`);
    console.log(`   Terminal: ${config.terminalKeyE2C}`);
    
    const response = await axios.post(
      `${config.apiUrl}AddShop`,
      { ...requestData, Token: token },
      {
        headers: {
          'Content-Type': 'application/json'
        },
        validateStatus: () => true
      }
    );
    
    console.log('\nüì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:');
    console.log('   Status:', response.status);
    console.log('   Response:', JSON.stringify(response.data, null, 2));
    
    if (response.data.Success) {
      console.log('\n‚úÖ –ö–ª—É–± —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!');
      return shopData.ShopCode;
    } else {
      console.log('\n‚ö†Ô∏è –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å:');
      console.log('   ErrorCode:', response.data.ErrorCode);
      console.log('   Message:', response.data.Message);
      console.log('   Details:', response.data.Details);
      
      // –ï—Å–ª–∏ –∫–ª—É–± —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
      if (response.data.ErrorCode === '8' || response.data.Message?.includes('already exists')) {
        console.log('\nüí° –ö–ª—É–± —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π');
        return shopData.ShopCode;
      }
      return null;
    }
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–ª—É–±–∞:');
    console.error('   ', error.response?.data || error.message);
    return null;
  }
}

// 3. –¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–∞
async function testInitPayment(shopCode) {
  console.log('\nüí≥ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–∞...\n');
  
  const paymentData = {
    Amount: formatAmountForTBank(1000), // 1000 —Ä—É–±–ª–µ–π
    OrderId: `test_order_${Date.now()}`,
    Description: '–¢–µ—Å—Ç–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä—Ç–∞',
    CustomerKey: 'test_customer@allcourt.ru',
    SuccessURL: 'https://allcourt.ru/payment-result?status=success',
    FailURL: 'https://allcourt.ru/payment-result?status=fail',
    NotificationURL: 'https://allcourt.ru/api/webhooks/tbank-multiaccounts'
  };

  try {
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–º–∏—Å—Å–∏–∏
    const totalAmount = 1000;
    const platformCommission = 1.0; // 1%
    const acquiringCommission = 2.6; // 2.6%
    const totalCommission = platformCommission + acquiringCommission; // 3.6%
    const commissionAmount = totalAmount * (totalCommission / 100);
    const clubAmount = totalAmount - commissionAmount;
    
    console.log('üí∞ –†–∞—Å—á–µ—Ç –∫–æ–º–∏—Å—Å–∏–π:');
    console.log(`   –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞: ${totalAmount}‚ÇΩ`);
    console.log(`   –ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: ${platformCommission}%`);
    console.log(`   –ö–æ–º–∏—Å—Å–∏—è —ç–∫–≤–∞–π—Ä–∏–Ω–≥–∞: ${acquiringCommission}%`);
    console.log(`   –û–±—â–∞—è –∫–æ–º–∏—Å—Å–∏—è: ${totalCommission}% (${commissionAmount}‚ÇΩ)`);
    console.log(`   –°—É–º–º–∞ –¥–ª—è –∫–ª—É–±–∞: ${clubAmount}‚ÇΩ`);
    
    const requestData = {
      TerminalKey: config.terminalKeyE2C,
      ...paymentData,
      Shops: shopCode ? [{
        ShopCode: shopCode,
        Amount: formatAmountForTBank(clubAmount),
        Name: '–¢–µ—Å—Ç–æ–≤—ã–π –ö–ª—É–± AllCourt'
      }] : undefined
    };
    
    const token = generateToken({
      TerminalKey: requestData.TerminalKey,
      Amount: requestData.Amount,
      OrderId: requestData.OrderId
    }, config.tokenPassword);
    
    console.log('\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞:');
    console.log(`   OrderId: ${paymentData.OrderId}`);
    console.log(`   Amount: ${totalAmount}‚ÇΩ`);
    if (shopCode) {
      console.log(`   ShopCode: ${shopCode}`);
      console.log(`   Shop Amount: ${clubAmount}‚ÇΩ`);
    }
    
    const response = await axios.post(
      `${config.apiUrl}Init`,
      { ...requestData, Token: token },
      {
        headers: {
          'Content-Type': 'application/json'
        },
        validateStatus: () => true
      }
    );
    
    console.log('\nüì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:');
    console.log('   Status:', response.status);
    console.log('   Response:', JSON.stringify(response.data, null, 2));
    
    if (response.data.Success) {
      console.log('\n‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
      console.log('   PaymentId:', response.data.PaymentId);
      console.log('   PaymentURL:', response.data.PaymentURL);
      return response.data.PaymentId;
    } else {
      console.log('\n‚ùå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞—Ç–µ–∂–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å:');
      console.log('   ErrorCode:', response.data.ErrorCode);
      console.log('   Message:', response.data.Message);
      console.log('   Details:', response.data.Details);
      return null;
    }
  } catch (error) {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–∞:');
    console.error('   ', error.response?.data || error.message);
    return null;
  }
}

// 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
async function checkPaymentStatus(paymentId) {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞...\n');
  
  try {
    const requestData = {
      TerminalKey: config.terminalKeyE2C,
      PaymentId: paymentId
    };
    
    const token = generateToken(requestData, config.tokenPassword);
    
    const response = await axios.post(
      `${config.apiUrl}GetState`,
      { ...requestData, Token: token },
      {
        headers: {
          'Content-Type': 'application/json'
        },
        validateStatus: () => true
      }
    );
    
    if (response.data.Success) {
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –ø–æ–ª—É—á–µ–Ω:');
      console.log('   PaymentId:', response.data.PaymentId);
      console.log('   Status:', response.data.Status);
      console.log('   Amount:', response.data.Amount / 100, '‚ÇΩ');
      return true;
    } else {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å:');
      console.log('   ErrorCode:', response.data.ErrorCode);
      console.log('   Message:', response.data.Message);
      return false;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞:');
    console.error('   ', error.response?.data || error.message);
    return false;
  }
}

// 5. –¢–µ—Å—Ç webhook (—Å–∏–º—É–ª—è—Ü–∏—è)
async function testWebhook() {
  console.log('\nüîî –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...\n');
  
  console.log('üìç Webhook URL: https://allcourt.ru/api/webhooks/tbank-multiaccounts');
  console.log('üìç –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π IP: 34.14.97.72 (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ)');
  
  // –ó–¥–µ—Å—å –º—ã –Ω–µ –º–æ–∂–µ–º —Ä–µ–∞–ª—å–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å webhook, 
  // —Ç–∞–∫ –∫–∞–∫ –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω –æ—Ç –¢-–ë–∞–Ω–∫–∞
  console.log('\nüí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook:');
  console.log('   1. –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
  console.log('   2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Cloud Functions');
  console.log('   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏—à–ª–æ');
  
  return true;
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function runTests() {
  console.log('='.repeat(60));
  console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –¢-–ë–ê–ù–ö –ú–£–õ–¨–¢–ò–†–ê–°–ß–ï–¢–´');
  console.log('='.repeat(60));
  console.log('\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
  console.log(`   –°—Ä–µ–¥–∞: –¢–ï–°–¢–û–í–ê–Ø`);
  console.log(`   API URL: ${config.apiUrl}`);
  console.log(`   Terminal E2C: ${config.terminalKeyE2C}`);
  console.log(`   Static IP: 34.14.97.72`);
  
  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
  const apiAvailable = await checkAPIConnection();
  if (!apiAvailable) {
    console.log('\n‚õî –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ: API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    return;
  }
  
  // 2. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–ª—É–±–∞
  const shopCode = await testRegisterShop();
  
  // 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞—Ç–µ–∂–∞
  const paymentId = await testInitPayment(shopCode);
  
  // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
  if (paymentId) {
    await checkPaymentStatus(paymentId);
  }
  
  // 5. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook
  await testWebhook();
  
  console.log('\n' + '='.repeat(60));
  console.log('‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û');
  console.log('='.repeat(60));
  
  console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ NotificationUrl –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –¢-–ë–∞–Ω–∫–∞');
  console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ IP 34.14.97.72 –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫');
  console.log('   3. –ó–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ –ø–æ —Å—Å—ã–ª–∫–µ –∏–∑ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
  console.log('   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Cloud Functions –¥–ª—è webhook');
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
runTests().catch(console.error);