#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ú—É–ª—å—Ç–∏—Ä–∞—Å—á–µ—Ç–æ–≤ –¢-–ë–∞–Ω–∫–∞
 * –ó–∞–ø—É—Å–∫: node test-multiaccounts.js
 */

const axios = require('axios');
const crypto = require('crypto');

// –¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const TEST_CONFIG = {
  terminalKey: '1755339010178',
  terminalKeyE2C: '1755339010178E2C',
  password: 'D7SfdvJY5zq7fm=W',  // –¢–µ—Å—Ç–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
  apiUrl: 'https://rest-api-test.tinkoff.ru/v2/'
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞
function generateToken(params, password) {
  const paramsWithPassword = { ...params, Password: password };
  const sortedKeys = Object.keys(paramsWithPassword).sort();
  const concatenated = sortedKeys
    .map(key => paramsWithPassword[key])
    .join('');
  
  return crypto
    .createHash('sha256')
    .update(concatenated)
    .digest('hex');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—É–º–º—ã –≤ –∫–æ–ø–µ–π–∫–∏
function toKopecks(rubles) {
  return Math.round(rubles * 100);
}

async function testMultiaccounts() {
  console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ú—É–ª—å—Ç–∏—Ä–∞—Å—á–µ—Ç–æ–≤ –¢-–ë–∞–Ω–∫–∞...\n');
  console.log('üìç –¢–µ—Å—Ç–æ–≤–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:', TEST_CONFIG.apiUrl);
  console.log('üîë Terminal Key E2C:', TEST_CONFIG.terminalKeyE2C);
  console.log('');

  try {
    // 1. –¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–∞
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø–ª–∞—Ç–µ–∂–∞ —Å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º —Å—Ä–µ–¥—Å—Ç–≤...');
    
    const orderId = `test_order_${Date.now()}`;
    const amount = 1000; // 1000 —Ä—É–±–ª–µ–π
    const platformCommission = 10; // 10 —Ä—É–±–ª–µ–π (1%)
    const clubAmount = amount - platformCommission; // 990 —Ä—É–±–ª–µ–π
    
    const initData = {
      TerminalKey: TEST_CONFIG.terminalKeyE2C,
      Amount: toKopecks(amount),
      OrderId: orderId,
      Description: '–¢–µ—Å—Ç–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä—Ç–∞',
      CustomerKey: 'test@example.com',
      SuccessURL: 'https://allcourt.ru/success',
      FailURL: 'https://allcourt.ru/fail',
      NotificationURL: 'https://allcourt.ru/api/webhooks/tbank-multiaccounts',
      
      // –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ (–¥–ª—è –ú—É–ª—å—Ç–∏—Ä–∞—Å—á–µ—Ç–æ–≤)
      Shops: [
        {
          ShopCode: 'test_club_001',
          Amount: toKopecks(clubAmount),
          Name: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª—É–±',
          Fee: toKopecks(platformCommission)
        }
      ],
      
      DATA: {
        Email: 'test@example.com',
        Phone: '+79991234567'
      }
    };
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
    const token = generateToken({
      TerminalKey: initData.TerminalKey,
      Amount: initData.Amount,
      OrderId: initData.OrderId
    }, TEST_CONFIG.password);
    
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é...');
    console.log(`   –°—É–º–º–∞: ${amount} —Ä—É–±`);
    console.log(`   –ö–ª—É–±—É: ${clubAmount} —Ä—É–±`);
    console.log(`   –ö–æ–º–∏—Å—Å–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: ${platformCommission} —Ä—É–±`);
    
    const response = await axios.post(
      `${TEST_CONFIG.apiUrl}Init`,
      { ...initData, Token: token },
      {
        headers: {
          'Content-Type': 'application/json'
        }
      }
    );
    
    if (response.data.Success) {
      console.log('‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!');
      console.log(`   Payment ID: ${response.data.PaymentId}`);
      console.log(`   Status: ${response.data.Status}`);
      console.log(`   Payment URL: ${response.data.PaymentURL}`);
      console.log('');
      console.log('üåê –û—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–ª–∞—Ç—ã:');
      console.log(`   ${response.data.PaymentURL}`);
      console.log('');
      console.log('üí≥ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—É—é –∫–∞—Ä—Ç—É:');
      console.log('   –ù–æ–º–µ—Ä: 4300 0000 0000 0777');
      console.log('   CVV: 123');
      console.log('   –°—Ä–æ–∫: 12/25');
      
      return response.data.PaymentId;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', response.data);
      return null;
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:');
    if (error.response) {
      console.error('   –°—Ç–∞—Ç—É—Å:', error.response.status);
      console.error('   –î–∞–Ω–Ω—ã–µ:', error.response.data);
      
      // –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –æ—à–∏–±–æ–∫ –¢-–ë–∞–Ω–∫–∞
      if (error.response.data?.ErrorCode) {
        console.error('');
        console.error('üìã –ö–æ–¥ –æ—à–∏–±–∫–∏:', error.response.data.ErrorCode);
        console.error('üìù –°–æ–æ–±—â–µ–Ω–∏–µ:', error.response.data.Message || error.response.data.Details);
        
        // –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ —á–∞—Å—Ç—ã–º –æ—à–∏–±–∫–∞–º
        switch(error.response.data.ErrorCode) {
          case '7':
            console.error('üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π Terminal Key –∏–ª–∏ –æ–Ω –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è –ú—É–ª—å—Ç–∏—Ä–∞—Å—á–µ—Ç–æ–≤');
            break;
          case '8':
            console.error('üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ù–µ–≤–µ—Ä–Ω–∞—è –ø–æ–¥–ø–∏—Å—å —Ç–æ–∫–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å –∏ –∞–ª–≥–æ—Ä–∏—Ç–º –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
            break;
          case '9':
            console.error('üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
            break;
          case '99':
            console.error('üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ú–∞–≥–∞–∑–∏–Ω (ShopCode) –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ');
            break;
        }
      }
    } else {
      console.error('   –°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
    }
  }
}

// 2. –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–∞–≥–∞–∑–∏–Ω–∞ (–∫–ª—É–±–∞)
async function testRegisterShop() {
  console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∫–ª—É–±–∞ –∫–∞–∫ –º–∞–≥–∞–∑–∏–Ω–∞...');
  
  const shopData = {
    TerminalKey: TEST_CONFIG.terminalKeyE2C,
    ShopCode: `test_club_${Date.now()}`,
    Name: '–¢–µ—Å—Ç–æ–≤—ã–π —Ç–µ–Ω–Ω–∏—Å–Ω—ã–π –∫–ª—É–±',
    Inn: '7707083893', // –¢–µ—Å—Ç–æ–≤—ã–π –ò–ù–ù (–°–±–µ—Ä–±–∞–Ω–∫)
    Email: 'test@allcourt.ru',
    Phone: '+79991234567',
    Account: '40702810138000000000', // –¢–µ—Å—Ç–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç–Ω—ã–π —Å—á–µ—Ç
    BankBik: '044525225', // –ë–ò–ö –°–±–µ—Ä–±–∞–Ω–∫–∞
    LegalAddress: '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 1',
    CEO: '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á'
  };
  
  const token = generateToken({
    TerminalKey: shopData.TerminalKey,
    ShopCode: shopData.ShopCode,
    Inn: shopData.Inn
  }, TEST_CONFIG.password);
  
  try {
    console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –º–∞–≥–∞–∑–∏–Ω–∞...');
    console.log(`   Shop Code: ${shopData.ShopCode}`);
    console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${shopData.Name}`);
    
    const response = await axios.post(
      `${TEST_CONFIG.apiUrl}AddShop`,
      { ...shopData, Token: token },
      {
        headers: {
          'Content-Type': 'application/json'
        }
      }
    );
    
    if (response.data.Success) {
      console.log('‚úÖ –ú–∞–≥–∞–∑–∏–Ω —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!');
      console.log(`   Shop Code: ${response.data.ShopCode}`);
      return response.data.ShopCode;
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', response.data);
      return null;
    }
    
  } catch (error) {
    if (error.response?.data?.ErrorCode === '10') {
      console.log('‚ÑπÔ∏è  –ú–∞–≥–∞–∑–∏–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–æ–≤)');
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
    }
  }
}

// 3. –¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞
async function testGetPaymentStatus(paymentId) {
  if (!paymentId) return;
  
  console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞...');
  
  const statusData = {
    TerminalKey: TEST_CONFIG.terminalKeyE2C,
    PaymentId: paymentId
  };
  
  const token = generateToken(statusData, TEST_CONFIG.password);
  
  try {
    const response = await axios.post(
      `${TEST_CONFIG.apiUrl}GetState`,
      { ...statusData, Token: token },
      {
        headers: {
          'Content-Type': 'application/json'
        }
      }
    );
    
    if (response.data.Success) {
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω:');
      console.log(`   Payment ID: ${response.data.PaymentId}`);
      console.log(`   Status: ${response.data.Status}`);
      console.log(`   Amount: ${response.data.Amount / 100} —Ä—É–±`);
      
      // –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤
      const statusDescriptions = {
        'NEW': '–ü–ª–∞—Ç–µ–∂ —Å–æ–∑–¥–∞–Ω',
        'FORM_SHOWED': '–ü–æ–∫—É–ø–∞—Ç–µ–ª—é –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞ –ø–ª–∞—Ç–µ–∂–Ω–∞—è —Ñ–æ—Ä–º–∞',
        'AUTHORIZING': '–ü–ª–∞—Ç–µ–∂ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è',
        'AUTHORIZED': '–°—Ä–µ–¥—Å—Ç–≤–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã',
        'CONFIRMED': '‚úÖ –ü–ª–∞—Ç–µ–∂ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
        'REJECTED': '‚ùå –ü–ª–∞—Ç–µ–∂ –æ—Ç–∫–ª–æ–Ω–µ–Ω',
        'REVERSED': '‚Ü©Ô∏è –ü–ª–∞—Ç–µ–∂ –æ—Ç–º–µ–Ω–µ–Ω',
        'REFUNDED': 'üí∞ –í–æ–∑–≤—Ä–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω'
      };
      
      console.log(`   –û–ø–∏—Å–∞–Ω–∏–µ: ${statusDescriptions[response.data.Status] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å'}`);
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', response.data);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.response?.data || error.message);
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('‚ïê'.repeat(60));
  console.log('     –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–£–õ–¨–¢–ò–†–ê–°–ß–ï–¢–û–í –¢-–ë–ê–ù–ö–ê');
  console.log('‚ïê'.repeat(60));
  console.log('');
  
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
  const paymentId = await testMultiaccounts();
  await testRegisterShop();
  
  if (paymentId) {
    // –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    console.log('\n‚è≥ –ñ–¥–µ–º 3 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—Ç–∞—Ç—É—Å–∞...');
    await new Promise(resolve => setTimeout(resolve, 3000));
    await testGetPaymentStatus(paymentId);
  }
  
  console.log('\n‚ïê'.repeat(60));
  console.log('‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('');
  console.log('üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è –æ–ø–ª–∞—Ç—ã –∏ –ø—Ä–æ–≤–µ–¥–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂');
  console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Firebase Functions');
  console.log('3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–ª–∞—Ç–µ–∂ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω –º–µ–∂–¥—É –∫–ª—É–±–æ–º –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π');
  console.log('‚ïê'.repeat(60));
}

// –ó–∞–ø—É—Å–∫
main().catch(console.error);