import * as admin from "firebase-admin";

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ email —á–µ—Ä–µ–∑ Firebase Extension (firestore-send-email)
 * –î–æ–∫—É–º–µ–Ω—Ç—ã –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é 'mail' –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º
 */

interface EmailData {
  to: string | string[];
  cc?: string | string[];
  bcc?: string | string[];
  from?: string;
  replyTo?: string;
  message: {
    subject: string;
    text?: string;
    html?: string;
    attachments?: any[];
  };
  template?: {
    name: string;
    data: Record<string, any>;
  };
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ email —á–µ—Ä–µ–∑ Firebase Extension
 * @param {EmailData} emailData - –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
 * @return {Promise<string>} ID –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ mail
 */
export async function sendEmail(emailData: EmailData): Promise<string> {
  try {
    const mailRef = await admin.firestore().collection("mail").add({
      ...emailData,
      createdAt: admin.firestore.FieldValue.serverTimestamp(),
    });

    console.log("Email queued for sending:", mailRef.id);
    return mailRef.id;
  } catch (error) {
    console.error("Error queuing email:", error);
    throw error;
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç—É
 * @param {any} booking - –î–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
 * @return {Promise<void>}
 */
export async function sendBookingConfirmationToCustomer(booking: any): Promise<void> {
  if (!booking.customerEmail) {
    console.log("No customer email provided, skipping email notification");
    return;
  }

  const emailData: EmailData = {
    to: booking.customerEmail,
    message: {
      subject: `–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è - ${booking.courtName}`,
      html: generateCustomerEmailHTML(booking),
    },
  };

  await sendEmail(emailData);
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
 * @param {any} booking - –î–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
 * @param {string} adminEmail - Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 * @return {Promise<void>}
 */
export async function sendBookingNotificationToAdmin(booking: any, adminEmail: string): Promise<void> {
  const emailData: EmailData = {
    to: adminEmail,
    message: {
      subject: `–ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ - ${booking.courtName} –Ω–∞ ${formatDate(booking.date)}`,
      html: generateAdminEmailHTML(booking),
    },
  };

  await sendEmail(emailData);
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –¥–ª—è –ø–∏—Å—å–º–∞ –∫–ª–∏–µ–Ω—Ç—É
 * @param {any} booking - –î–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
 * @return {string} HTML –∫–æ–Ω—Ç–µ–Ω—Ç
 */
function generateCustomerEmailHTML(booking: any): string {
  return `
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      line-height: 1.6;
      color: #333;
      background-color: #f4f4f4;
      margin: 0;
      padding: 0;
    }
    .container {
      max-width: 600px;
      margin: 0 auto;
      background: white;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }
    .header {
      background: #00A86B;
      color: white;
      padding: 30px;
      text-align: center;
    }
    .content {
      padding: 40px 30px;
    }
    .booking-details {
      background: #f8f9fa;
      border-radius: 8px;
      padding: 20px;
      margin: 20px 0;
    }
    .detail-row {
      display: flex;
      justify-content: space-between;
      margin: 10px 0;
      padding: 5px 0;
      border-bottom: 1px solid #e0e0e0;
    }
    .detail-row:last-child {
      border-bottom: none;
    }
    .label {
      font-weight: 600;
      color: #666;
    }
    .value {
      color: #333;
    }
    .footer {
      background: #f8f9fa;
      padding: 20px;
      text-align: center;
      font-size: 14px;
      color: #666;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>üéæ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ!</h1>
    </div>
    
    <div class="content">
      <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${booking.customerName}!</p>
      
      <p>–í–∞—à–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ. –ù–∏–∂–µ –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –¥–µ—Ç–∞–ª–∏:</p>
      
      <div class="booking-details">
        <h3 style="margin-top: 0;">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏</h3>
        
        <div class="detail-row">
          <span class="label">–ö–ª—É–±:</span>
          <span class="value">${booking.venueName}</span>
        </div>
        
        <div class="detail-row">
          <span class="label">–ö–æ—Ä—Ç:</span>
          <span class="value">${booking.courtName}</span>
        </div>
        
        <div class="detail-row">
          <span class="label">–î–∞—Ç–∞:</span>
          <span class="value">${formatDate(booking.date)}</span>
        </div>
        
        <div class="detail-row">
          <span class="label">–í—Ä–µ–º—è:</span>
          <span class="value">${booking.startTime} - ${booking.endTime}</span>
        </div>
        
        <div class="detail-row">
          <span class="label">–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</span>
          <span class="value">${booking.duration} –º–∏–Ω—É—Ç</span>
        </div>
        
        <div class="detail-row">
          <span class="label">–¢–∏–ø –∏–≥—Ä—ã:</span>
          <span class="value">${booking.gameType === "single" ? "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è" : "–û—Ç–∫—Ä—ã—Ç–∞—è"}</span>
        </div>
        
        <div class="detail-row">
          <span class="label">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
          <span class="value" style="font-size: 18px; font-weight: bold; color: #00A86B;">
            ${booking.amount} ‚ÇΩ
          </span>
        </div>
        
        <div class="detail-row">
          <span class="label">–ù–æ–º–µ—Ä –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:</span>
          <span class="value">${booking.id}</span>
        </div>
      </div>
      
      <p>–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ –¥–ª—è –ø—Ä–µ–¥—ä—è–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –∫–ª—É–±–∞.</p>
      
      <p style="color: #666; font-size: 14px; margin-top: 30px;">
        –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, 
        –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∫–ª—É–±–∞.
      </p>
    </div>
    
    <div class="footer">
      <p>¬© 2024 –í—Å–µ –ö–æ—Ä—Ç—ã. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
      <p>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–∏—Å—å–º–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –Ω–µ–≥–æ.</p>
    </div>
  </div>
</body>
</html>`;
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –¥–ª—è –ø–∏—Å—å–º–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
 * @param {any} booking - –î–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
 * @return {string} HTML –∫–æ–Ω—Ç–µ–Ω—Ç
 */
function generateAdminEmailHTML(booking: any): string {
  return `
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      line-height: 1.6;
      color: #333;
    }
    .container {
      max-width: 600px;
      margin: 0 auto;
      padding: 20px;
    }
    .booking-card {
      background: #f8f9fa;
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 20px;
      margin: 20px 0;
    }
    .detail-row {
      margin: 8px 0;
    }
    .label {
      font-weight: bold;
      display: inline-block;
      width: 150px;
    }
    .highlight {
      background: #ffeb3b;
      padding: 2px 6px;
      border-radius: 3px;
    }
  </style>
</head>
<body>
  <div class="container">
    <h2>üéæ –ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</h2>
    
    <div class="booking-card">
      <div class="detail-row">
        <span class="label">–ö–ª–∏–µ–Ω—Ç:</span>
        <span class="highlight">${booking.customerName}</span>
      </div>
      
      <div class="detail-row">
        <span class="label">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
        ${booking.customerPhone}
      </div>
      
      <div class="detail-row">
        <span class="label">–ö–æ—Ä—Ç:</span>
        ${booking.courtName}
      </div>
      
      <div class="detail-row">
        <span class="label">–î–∞—Ç–∞:</span>
        <strong>${formatDate(booking.date)}</strong>
      </div>
      
      <div class="detail-row">
        <span class="label">–í—Ä–µ–º—è:</span>
        <strong>${booking.startTime} - ${booking.endTime}</strong> (${booking.duration} –º–∏–Ω)
      </div>
      
      <div class="detail-row">
        <span class="label">–¢–∏–ø –∏–≥—Ä—ã:</span>
        ${booking.gameType === "single" ? "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è" : "–û—Ç–∫—Ä—ã—Ç–∞—è"}
      </div>
      
      <div class="detail-row">
        <span class="label">–°—Ç–æ–∏–º–æ—Å—Ç—å:</span>
        <strong style="color: #00A86B; font-size: 18px;">${booking.amount} ‚ÇΩ</strong>
      </div>
      
      <div class="detail-row">
        <span class="label">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:</span>
        ${getPaymentMethodText(booking.paymentMethod)}
      </div>
      
      <div class="detail-row">
        <span class="label">ID –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:</span>
        <code>${booking.id}</code>
      </div>
    </div>
    
    <p style="text-align: center; margin-top: 30px;">
      <a href="https://allcourt.ru/admin/bookings" 
         style="background: #00A86B; color: white; padding: 10px 20px; 
                text-decoration: none; border-radius: 5px; display: inline-block;">
        –û—Ç–∫—Ä—ã—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
      </a>
    </p>
  </div>
</body>
</html>`;
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
 * @param {string} dateString - –°—Ç—Ä–æ–∫–∞ —Å –¥–∞—Ç–æ–π
 * @return {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞
 */
function formatDate(dateString: string): string {
  const date = new Date(dateString);
  const options: Intl.DateTimeFormatOptions = {
    weekday: "long",
    year: "numeric",
    month: "long",
    day: "numeric",
  };
  return date.toLocaleDateString("ru-RU", options);
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
 * @param {string} method - –ö–æ–¥ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã
 * @return {string} –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
 */
function getPaymentMethodText(method: string): string {
  const methods: Record<string, string> = {
    online: "–û–Ω–ª–∞–π–Ω –æ–ø–ª–∞—Ç–∞",
    cash: "–ù–∞–ª–∏—á–Ω—ã–µ",
    online_payment: "–û–ø–ª–∞—á–µ–Ω–æ –æ–Ω–ª–∞–π–Ω",
    pay_at_venue: "–û–ø–ª–∞—Ç–∞ –≤ –∫–ª—É–±–µ",
  };
  return methods[method] || method;
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email
 * @param {string} mailDocId - ID –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ mail
 * @return {Promise<any>} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ
 */
export async function checkEmailStatus(mailDocId: string): Promise<any> {
  try {
    const mailDoc = await admin.firestore().collection("mail").doc(mailDocId).get();

    if (!mailDoc.exists) {
      throw new Error("Email document not found");
    }

    const data = mailDoc.data();
    return {
      id: mailDocId,
      status: data?.delivery?.state || "PENDING",
      error: data?.delivery?.error,
      info: data?.delivery?.info,
      attempts: data?.delivery?.attempts || 0,
    };
  } catch (error) {
    console.error("Error checking email status:", error);
    throw error;
  }
}

