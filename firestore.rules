rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Вспомогательные функции
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    
    function isSuperAdmin() {
      return isSignedIn() && 
        get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role == 'superadmin';
    }
    
    function isVenueAdmin(venueId) {
      return isSignedIn() && 
        get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.venueId == venueId;
    }
    
    function isVenueAdminOrManager(venueId) {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.venueId == venueId &&
        get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.role in ['admin', 'manager'];
    }
    
    // Клубы (venues) - публичное чтение, редактирование только админами клуба
    match /venues/{venueId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSuperAdmin() || isVenueAdmin(venueId);
      allow delete: if isSuperAdmin();
      
      // Корты внутри клубов
      match /courts/{courtId} {
        allow read: if true;
        allow create, update: if isSuperAdmin() || isVenueAdminOrManager(venueId);
        allow delete: if isSuperAdmin() || isVenueAdmin(venueId);
      }
    }
    
    // Администраторы - только суперадмин может управлять
    match /admins/{adminId} {
      // Админ может читать свои данные, суперадмин - все
      allow read: if isSignedIn() && (request.auth.uid == adminId || isSuperAdmin() || 
        (isAdmin() && get(/databases/$(database)/documents/admins/$(adminId)).data.venueId == 
         get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.venueId));
      
      // Создавать админов может только суперадмин или админ клуба (для своего клуба)
      allow create: if isSuperAdmin() || 
        (isAdmin() && request.resource.data.venueId == get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.venueId);
      
      // Обновлять может суперадмин или сам админ (ограниченно)
      allow update: if isSuperAdmin() || 
        (request.auth.uid == adminId && 
         request.resource.data.role == resource.data.role && 
         request.resource.data.venueId == resource.data.venueId &&
         !request.resource.data.keys().hasAny(['password'])); // Запрет изменения пароля
         
      allow delete: if isSuperAdmin();
    }
    
    // Подписки - читать может админ клуба, управлять - суперадмин
    match /subscriptions/{subscriptionId} {
      allow read: if isSignedIn() && 
        (isSuperAdmin() || isVenueAdmin(resource.data.venueId));
      allow create, update, delete: if isSuperAdmin();
    }
    
    // Бронирования
    match /bookings/{bookingId} {
      // Публичное чтение для конкретного бронирования (по ID)
      allow read: if true;
      
      // Создание доступно всем (гостевое бронирование)
      allow create: if true;
      
      // Обновление только админами соответствующего клуба
      allow update: if isSignedIn() && 
        (isSuperAdmin() || isVenueAdminOrManager(resource.data.venueId));
        
      // Удаление только админами
      allow delete: if isSignedIn() && 
        (isSuperAdmin() || isVenueAdmin(resource.data.venueId));
    }
    
    // Клиенты - управление только админами клуба
    match /customers/{customerId} {
      allow read: if isSignedIn() && 
        (isSuperAdmin() || isVenueAdminOrManager(resource.data.venueId));
      allow create: if isSignedIn() && 
        (isSuperAdmin() || isVenueAdminOrManager(request.resource.data.venueId));
      allow update, delete: if isSignedIn() && 
        (isSuperAdmin() || isVenueAdmin(resource.data.venueId));
    }
    
    // Настройки - только для суперадмина
    match /settings/{settingId} {
      allow read: if isSignedIn() && isSuperAdmin();
      allow write: if isSignedIn() && isSuperAdmin();
    }
    
    // Счета и платежи - чтение для админов клуба, запись только через Cloud Functions
    match /invoices/{invoiceId} {
      allow read: if isSignedIn() && 
        (isSuperAdmin() || isVenueAdmin(resource.data.venueId));
      allow write: if false; // Только Cloud Functions
    }
    
    match /payment_methods/{methodId} {
      allow read: if isSignedIn() && 
        (isSuperAdmin() || isVenueAdmin(resource.data.venueId));
      allow write: if false; // Только Cloud Functions
    }
    
    match /payment_webhooks/{webhookId} {
      allow read: if isSignedIn() && isSuperAdmin();
      allow write: if false; // Только Cloud Functions
    }
    
    // Коды верификации - только Cloud Functions
    match /verificationCodes/{email} {
      allow read, write: if false;
    }
    
    // Запрет доступа к остальным коллекциям по умолчанию
    match /{document=**} {
      allow read, write: if false;
    }
  }
}