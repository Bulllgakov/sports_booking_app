import { initializeApp } from 'firebase/app';
import { getFirestore, collection, getDocs, updateDoc, doc, GeoPoint } from 'firebase/firestore';

// Firebase config
const firebaseConfig = {
  apiKey: "AIzaSyAnp3SY9XEyF-le5q_Tcv-7Le2qqvtz0ZM",
  authDomain: "sports-booking-app-1d7e5.firebaseapp.com",
  projectId: "sports-booking-app-1d7e5",
  storageBucket: "sports-booking-app-1d7e5.firebasestorage.app",
  messagingSenderId: "648540980109",
  appId: "1:648540980109:web:97fbe182c59bb2641ab3c4",
  measurementId: "G-VL4MCP1PZP"
};

// Initialize Firebase
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);

// Moscow locations for test venues
const venueLocations = {
  'SmartPadel': {
    latitude: 55.7522,  // Near Moscow center
    longitude: 37.6156,
    city: '–ú–æ—Å–∫–≤–∞'
  },
  '–¢–µ–Ω–Ω–∏—Å–Ω—ã–π —Ü–µ–Ω—Ç—Ä "Ace"': {
    latitude: 55.7939,  // North Moscow
    longitude: 37.6176,
    city: '–ú–æ—Å–∫–≤–∞'
  }
};

async function addGeolocationToVenues() {
  try {
    console.log('üåç –î–æ–±–∞–≤–ª—è–µ–º –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –∫ –∫–ª—É–±–∞–º...');
    
    // Get all venues
    const venuesSnapshot = await getDocs(collection(db, 'venues'));
    
    for (const venueDoc of venuesSnapshot.docs) {
      const venueData = venueDoc.data();
      const venueName = venueData.name;
      
      if (venueLocations[venueName]) {
        const location = venueLocations[venueName];
        
        // Update venue with geolocation
        await updateDoc(doc(db, 'venues', venueDoc.id), {
          location: new GeoPoint(location.latitude, location.longitude),
          city: location.city,
          updatedAt: new Date()
        });
        
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω ${venueName}:`);
        console.log(`   üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${location.latitude}, ${location.longitude}`);
        console.log(`   üèôÔ∏è  –ì–æ—Ä–æ–¥: ${location.city}`);
      }
    }
    
    console.log('\nüéâ –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
    console.log('üì± –¢–µ–ø–µ—Ä—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –∫–ª—É–±–æ–≤');
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', error);
    process.exit(1);
  }
}

// Run the update
addGeolocationToVenues();