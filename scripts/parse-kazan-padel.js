#!/usr/bin/env node

/**
 * –ü–∞—Ä—Å–∏–Ω–≥ –ø–∞–¥–µ–ª –∫–ª—É–±–æ–≤ –ö–∞–∑–∞–Ω–∏ —Å –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ–º —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
 * –∏ –æ–±–æ–≥–∞—â–µ–Ω–∏–µ–º —á–µ—Ä–µ–∑ DaData API
 */

import WebsiteParser from './website-parser.js';
import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';
import dotenv from 'dotenv';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: path.join(__dirname, '.env') });

// –ü–∞–¥–µ–ª –∫–ª—É–±—ã –ö–∞–∑–∞–Ω–∏ (—Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—É–±—ã)
const kazanPadelClubs = [
  {
    name: 'Padel Friends –ö–∞–∑–∞–Ω—å',
    website: 'https://padelfriends.ru',
    address: '–ö–∞–∑–∞–Ω—å, –ø—Ä–æ—Å–ø–µ–∫—Ç –ê–ª—å–±–µ—Ä—Ç–∞ –ö–∞–º–∞–ª–µ–µ–≤–∞, 27–ú',
    phone: '+7 (843) 212-23-23',
    description: '6 –ø–∞–Ω–æ—Ä–∞–º–Ω—ã—Ö –∫–æ—Ä—Ç–æ–≤ Drop Shot'
  },
  {
    name: '–ê–†–¢–ï–ù - –ê—Ä–µ–Ω–∞ —Ç–µ–Ω–Ω–∏—Å–∞',
    website: 'https://artennis.ru',
    address: '–ö–∞–∑–∞–Ω—å, —É–ª. –ê–¥–æ—Ä–∞—Ç—Å–∫–æ–≥–æ, 34',
    phone: '+7 (843) 212-10-10',
    description: '–ü–∞–¥–µ–ª, —Å–∫–≤–æ—à –∏ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Å'
  },
  {
    name: 'LUNDA Padel –ö–∞–∑–∞–Ω—å',
    website: 'https://lundapadel.ru',
    address: '–ö–∞–∑–∞–Ω—å',
    phone: '+7 (800) 234-50-50',
    description: '–ö—Ä—É–ø–Ω–µ–π—à–∞—è —Å–µ—Ç—å –ø–∞–¥–µ–ª –∫–ª—É–±–æ–≤'
  },
  {
    name: 'Padel Time',
    website: 'https://padeltime.ru',
    address: '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ø–æ—Å–µ–ª–æ–∫ –†–µ–ø–∏–Ω–æ',
    phone: '+7 (812) 670-00-00',
    description: '–°–µ—Ç—å –ø–∞–¥–µ–ª –∫–ª—É–±–æ–≤'
  },
  {
    name: '–§–µ–¥–µ—Ä–∞—Ü–∏—è –ü–∞–¥–µ–ª –†–æ—Å—Å–∏–∏',
    website: 'https://federationpadel.ru',
    address: '–ú–æ—Å–∫–≤–∞',
    phone: '+7 (495) 000-00-00',
    description: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Ñ–µ–¥–µ—Ä–∞—Ü–∏—è –ø–∞–¥–µ–ª–∞'
  }
];

async function parseKazanPadelClubs() {
  const parser = new WebsiteParser();
  const results = [];
  
  try {
    console.log('üéæ –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ –ø–∞–¥–µ–ª –∫–ª—É–±–æ–≤ –ö–∞–∑–∞–Ω–∏...\n');
    console.log('‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–µ–π DaData
    const DADATA_API_KEY = process.env.DADATA_API_KEY;
    const DADATA_SECRET = process.env.DADATA_SECRET;
    
    if (!DADATA_API_KEY || !DADATA_SECRET) {
      console.log('‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: API –∫–ª—é—á–∏ DaData –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ');
      console.log('   –ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —Ç–æ–ª—å–∫–æ –ø–∞—Ä—Å–∏–Ω–≥ —Å–∞–π—Ç–æ–≤ –±–µ–∑ –æ–±–æ–≥–∞—â–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö\n');
    } else {
      console.log('‚úÖ API –∫–ª—é—á–∏ DaData –Ω–∞–π–¥–µ–Ω—ã, –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –æ–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö\n');
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä
    await parser.init();
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –∫–ª—É–±
    for (let i = 0; i < kazanPadelClubs.length; i++) {
      const club = kazanPadelClubs[i];
      console.log(`[${i + 1}/${kazanPadelClubs.length}] ${club.name}`);
      console.log('‚îÄ'.repeat(50));
      
      // –ü–∞—Ä—Å–∏–º —Å–∞–π—Ç
      const parseResult = await parser.parseSite(club.website);
      
      if (parseResult) {
        const clubData = {
          ...club,
          parsedData: {
            inn: parseResult.inn || '',
            ogrn: parseResult.ogrn || '',
            emails: parseResult.emails || [],
            companyNames: parseResult.companyNames || [],
            foundOnPages: parseResult.foundPages || []
          },
          enrichedData: null,
          parseError: parseResult.error
        };
        
        // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ò–ù–ù –∏ –µ—Å—Ç—å API –∫–ª—é—á–∏, –æ–±–æ–≥–∞—â–∞–µ–º —á–µ—Ä–µ–∑ DaData
        if (parseResult.inn && DADATA_API_KEY && DADATA_SECRET) {
          console.log('   üîÑ –û–±–æ–≥–∞—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ DaData...');
          const enrichedData = await parser.enrichWithDaData(
            parseResult.inn, 
            DADATA_API_KEY, 
            DADATA_SECRET
          );
          
          if (enrichedData) {
            clubData.enrichedData = enrichedData;
            console.log('   ‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–æ–≥–∞—â–µ–Ω—ã');
            console.log(`   üìã –Æ—Ä. –Ω–∞–∑–≤–∞–Ω–∏–µ: ${enrichedData.legalName}`);
            console.log(`   üìç –Æ—Ä. –∞–¥—Ä–µ—Å: ${enrichedData.legalAddress}`);
            if (enrichedData.managementName) {
              console.log(`   üë§ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: ${enrichedData.managementName}`);
            }
          }
        }
        
        results.push(clubData);
      } else {
        results.push({
          ...club,
          parsedData: null,
          enrichedData: null,
          parseError: 'Failed to parse website'
        });
      }
      
      console.log('');
      
      // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∫–ª—É–±–∞–º–∏
      if (i < kazanPadelClubs.length - 1) {
        await parser.delay(2000);
      }
    }
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    await parser.close();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const timestamp = new Date().toISOString().slice(0, 10);
    const outputDir = path.join(__dirname, '..', 'padel-data-kazan');
    const outputFile = path.join(outputDir, `kazan-padel-clubs-${timestamp}.json`);
    
    await fs.mkdir(outputDir, { recursive: true });
    await fs.writeFile(outputFile, JSON.stringify(results, null, 2), 'utf8');
    
    // –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\n‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê');
    console.log('üìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log('‚îÄ'.repeat(50));
    console.log(`–í—Å–µ–≥–æ –∫–ª—É–±–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${results.length}`);
    console.log(`–ù–∞–π–¥–µ–Ω–æ –ò–ù–ù: ${results.filter(r => r.parsedData?.inn).length}`);
    console.log(`–ù–∞–π–¥–µ–Ω–æ –û–ì–†–ù: ${results.filter(r => r.parsedData?.ogrn).length}`);
    console.log(`–ù–∞–π–¥–µ–Ω–æ email: ${results.filter(r => r.parsedData?.emails?.length > 0).length}`);
    console.log(`–û–±–æ–≥–∞—â–µ–Ω–æ —á–µ—Ä–µ–∑ DaData: ${results.filter(r => r.enrichedData).length}`);
    console.log(`–° –æ—à–∏–±–∫–∞–º–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞: ${results.filter(r => r.parseError).length}`);
    console.log('');
    console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${outputFile}`);
    
    // –í—ã–≤–æ–¥–∏–º —Å–≤–æ–¥–∫—É –ø–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–º –¥–∞–Ω–Ω—ã–º
    console.log('\nüìã –ù–ê–ô–î–ï–ù–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:');
    console.log('‚îÄ'.repeat(50));
    
    results.forEach(club => {
      if (club.parsedData?.inn || club.enrichedData) {
        console.log(`\n${club.name}:`);
        if (club.parsedData?.inn) {
          console.log(`  –ò–ù–ù: ${club.parsedData.inn}`);
        }
        if (club.enrichedData?.legalName) {
          console.log(`  –Æ—Ä. –Ω–∞–∑–≤–∞–Ω–∏–µ: ${club.enrichedData.legalName}`);
        }
        if (club.enrichedData?.legalAddress) {
          console.log(`  –Æ—Ä. –∞–¥—Ä–µ—Å: ${club.enrichedData.legalAddress}`);
        }
        if (club.parsedData?.emails?.length > 0) {
          console.log(`  Email: ${club.parsedData.emails.join(', ')}`);
        }
      }
    });
    
  } catch (error) {
    console.error('\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
  } finally {
    await parser.close();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
parseKazanPadelClubs().catch(console.error);