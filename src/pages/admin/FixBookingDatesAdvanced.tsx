import React, { useState } from 'react'
import { useAuth } from '../../contexts/AuthContext'
import { 
  collection, 
  query, 
  getDocs,
  updateDoc,
  doc,
  Timestamp,
  where
} from 'firebase/firestore'
import { db } from '../../services/firebase'

export default function FixBookingDatesAdvanced() {
  const { admin, club } = useAuth()
  const [isProcessing, setIsProcessing] = useState(false)
  const [logs, setLogs] = useState<string[]>([])
  const [fixedCount, setFixedCount] = useState(0)
  const [targetDate, setTargetDate] = useState('2025-08-18')

  const addLog = (message: string) => {
    setLogs(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`])
    console.log(message)
  }

  const analyzeAndFixDates = async () => {
    if (!admin || admin.role !== 'superadmin') {
      addLog('‚ùå –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç—É –æ–ø–µ—Ä–∞—Ü–∏—é')
      return
    }

    setIsProcessing(true)
    setLogs([])
    setFixedCount(0)
    
    const clubTimezone = club?.timezone || 'Asia/Yekaterinburg'
    addLog(`üîÑ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –¥–∞—Ç—ã ${targetDate}`)
    addLog(`üìç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –∫–ª—É–±–∞: ${clubTimezone}`)
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      const bookingsRef = collection(db, 'bookings')
      const snapshot = await getDocs(bookingsRef)
      
      addLog(`üìä –ù–∞–π–¥–µ–Ω–æ –≤—Å–µ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: ${snapshot.size}`)
      
      let fixed = 0
      const updates: Promise<void>[] = []
      const problematicBookings: any[] = []
      const debugInfo: any[] = []
      
      for (const docSnap of snapshot.docs) {
        const data = docSnap.data()
        const bookingId = docSnap.id
        
        if (data.date) {
          const bookingDate = data.date.toDate ? data.date.toDate() : new Date(data.date)
          
          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∫ –≤ —Å–ø–∏—Å–∫–µ (–ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –±—Ä–∞—É–∑–µ—Ä–∞)
          const localDateStr = new Intl.DateTimeFormat('en-CA', {
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
          }).format(bookingDate)
          
          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞
          const clubDateStr = new Intl.DateTimeFormat('en-CA', {
            timeZone: clubTimezone,
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
          }).format(bookingDate)
          
          // –¢–∞–∫–∂–µ –ø–æ–ø—Ä–æ–±—É–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –¥—Ä—É–≥–∏—Ö —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–∞—Ö
          const moscowDateStr = new Intl.DateTimeFormat('en-CA', {
            timeZone: 'Europe/Moscow',
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
          }).format(bookingDate)
          
          const yekaterinburgDateStr = new Intl.DateTimeFormat('en-CA', {
            timeZone: 'Asia/Yekaterinburg',
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
          }).format(bookingDate)
          
          // –°–æ–±–∏—Ä–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –≤–æ–∫—Ä—É–≥ —Ü–µ–ª–µ–≤–æ–π –¥–∞—Ç—ã
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ 17, 18, 19 –∞–≤–≥—É—Å—Ç–∞
          if ((localDateStr >= '2025-08-17' && localDateStr <= '2025-08-19') ||
              (clubDateStr >= '2025-08-17' && clubDateStr <= '2025-08-19') ||
              (yekaterinburgDateStr >= '2025-08-17' && yekaterinburgDateStr <= '2025-08-19')) {
            if (debugInfo.length < 20) {  // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç –¥–ª—è –ª—É—á—à–µ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
              debugInfo.push({
                id: bookingId,
                customerName: data.customerName || data.clientName,
                time: data.startTime || data.time,
                dateISO: bookingDate.toISOString(),
                localDate: localDateStr,
                clubDate: clubDateStr,
                moscowDate: moscowDateStr,
                yekaterinburgDate: yekaterinburgDateStr
              })
            }
          }
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
          // –£—Å–ª–æ–≤–∏–µ 1: –ª–æ–∫–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Ü–µ–ª–µ–≤–æ–π, –Ω–æ –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞ - –Ω–µ—Ç
          if (localDateStr === targetDate && clubDateStr !== targetDate) {
            problematicBookings.push({
              id: bookingId,
              customerName: data.customerName || data.clientName,
              time: data.startTime || data.time,
              currentDate: bookingDate,
              localDate: localDateStr,
              clubDate: clubDateStr,
              reason: '–õ–æ–∫–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç, –Ω–æ –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è'
            })
          }
          // –£—Å–ª–æ–≤–∏–µ 2: –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –¥–µ–Ω—å –ø–æ–∑–∂–µ —Ü–µ–ª–µ–≤–æ–π –¥–∞—Ç—ã
          else if (clubDateStr === '2025-08-19' && localDateStr === targetDate) {
            problematicBookings.push({
              id: bookingId,
              customerName: data.customerName || data.clientName,
              time: data.startTime || data.time,
              currentDate: bookingDate,
              localDate: localDateStr,
              clubDate: clubDateStr,
              reason: '–í —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 19 –∞–≤–≥—É—Å—Ç–∞ –≤–º–µ—Å—Ç–æ 18'
            })
          }
          // –£—Å–ª–æ–≤–∏–µ 3: –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ UTC
          else if (bookingDate.toISOString().startsWith('2025-08-18T19:') || 
                   bookingDate.toISOString().startsWith('2025-08-18T20:') ||
                   bookingDate.toISOString().startsWith('2025-08-18T21:')) {
            problematicBookings.push({
              id: bookingId,
              customerName: data.customerName || data.clientName,
              time: data.startTime || data.time,
              currentDate: bookingDate,
              localDate: localDateStr,
              clubDate: clubDateStr,
              reason: 'UTC –≤—Ä–µ–º—è —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤–µ—á–µ—Ä 18 –∞–≤–≥—É—Å—Ç–∞ (–≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–∞—Ç–∞)'
            })
          }
        }
      }
      
      // –í–°–ï–ì–î–ê –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è —Å–∏—Ç—É–∞—Ü–∏–∏
      if (debugInfo.length > 0) {
        addLog(`\nüìã –ü—Ä–∏–º–µ—Ä—ã –ø–µ—Ä–≤—ã—Ö ${debugInfo.length} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:`)
        debugInfo.forEach(info => {
          addLog(`\nüîç ${info.customerName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'} - ${info.time || ''}`)
          addLog(`   ID: ${info.id}`)
          addLog(`   UTC: ${info.dateISO}`)
          addLog(`   –õ–æ–∫–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞: ${info.localDate}`)
          addLog(`   –í —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞: ${info.clubDate}`)
          addLog(`   –í –ú–æ—Å–∫–≤–µ: ${info.moscowDate}`)
          addLog(`   –í –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ: ${info.yekaterinburgDate}`)
        })
      } else {
        addLog(`\n‚ö†Ô∏è –ù–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞`)
      }
      
      if (problematicBookings.length > 0) {
        addLog(`\nüîç –ù–∞–π–¥–µ–Ω–æ ${problematicBookings.length} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π, —Ç—Ä–µ–±—É—é—â–∏—Ö –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏:`)
        
        for (const booking of problematicBookings) {
          addLog(`\nüìå –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ${booking.id}`)
          addLog(`   –ö–ª–∏–µ–Ω—Ç: ${booking.customerName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`)
          addLog(`   –í—Ä–µ–º—è: ${booking.time || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`)
          addLog(`   –ü—Ä–∏—á–∏–Ω–∞: ${booking.reason}`)
          addLog(`   –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ UTC: ${booking.currentDate.toISOString()}`)
          addLog(`   –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –∫–∞–∫: ${booking.localDate}`)
          addLog(`   –í —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞: ${booking.clubDate}`)
          
          // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –¥–∞—Ç—É
          // –ù—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞—Ç—É —Ç–∞–∫, —á—Ç–æ–±—ã –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞ –±—ã–ª–æ targetDate
          const [year, month, day] = targetDate.split('-').map(Number)
          
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–º–µ—â–µ–Ω–∏–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
          let offsetHours = 5 // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞
          if (clubTimezone === 'Europe/Moscow') offsetHours = 3
          else if (clubTimezone === 'Asia/Yekaterinburg') offsetHours = 5
          
          // –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –¥–∞—Ç—É
          // –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ +5 –±—ã–ª–æ 18 –∞–≤–≥—É—Å—Ç–∞ 00:00,
          // –≤ UTC –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 17 –∞–≤–≥—É—Å—Ç–∞ 19:00
          const correctedDate = new Date(Date.UTC(year, month - 1, day - 1, 24 - offsetHours, 0, 0))
          
          addLog(`   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –Ω–∞: ${correctedDate.toISOString()}`)
          
          const correctDateInClub = new Intl.DateTimeFormat('en-CA', {
            timeZone: clubTimezone,
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
          }).format(correctedDate)
          
          addLog(`   –ü—Ä–æ–≤–µ—Ä–∫–∞: –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞ –±—É–¥–µ—Ç ${correctDateInClub}`)
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
          const updateData: any = {
            date: Timestamp.fromDate(correctedDate),
            _dateFixedAdvanced: true,
            _dateFixedAt: Timestamp.now()
          }
          
          if (admin?.uid) {
            updateData._dateFixedBy = admin.uid
          }
          
          const updatePromise = updateDoc(doc(db, 'bookings', booking.id), updateData)
          updates.push(updatePromise)
          fixed++
        }
        
        if (updates.length > 0) {
          addLog(`\nüîß –ü—Ä–∏–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫ ${fixed} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º...`)
          await Promise.all(updates)
          setFixedCount(fixed)
          addLog(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${fixed} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π!`)
        }
      } else {
        addLog('‚úÖ –ù–µ –Ω–∞–π–¥–µ–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π, —Ç—Ä–µ–±—É—é—â–∏—Ö –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏')
      }
      
    } catch (error) {
      console.error('Error fixing booking dates:', error)
      addLog(`‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
    } finally {
      setIsProcessing(false)
    }
  }

  if (!admin || admin.role !== 'superadmin') {
    return (
      <div style={{ padding: '20px' }}>
        <h2>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h2>
        <p>–¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é</p>
      </div>
    )
  }

  return (
    <div style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>
      <h2>üîß –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π</h2>
      
      <div style={{ 
        background: '#e3f2fd', 
        border: '1px solid #2196f3',
        borderRadius: '8px',
        padding: '15px',
        marginBottom: '20px'
      }}>
        <h3>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
        <p>–≠—Ç–∞ —É—Ç–∏–ª–∏—Ç–∞ –Ω–∞—Ö–æ–¥–∏—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ:</p>
        <ul>
          <li>–û—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ –∫–∞–∫ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞ (–ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –≤—Ä–µ–º–µ–Ω–∏ –±—Ä–∞—É–∑–µ—Ä–∞)</li>
          <li>–ù–æ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è (–∏–∑-–∑–∞ —Ä–∞–∑–Ω–∏—Ü—ã —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤)</li>
        </ul>
        <p>–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –≤–∞—à–µ–≥–æ –∫–ª—É–±–∞: <strong>{club?.timezone || 'Asia/Yekaterinburg'}</strong></p>
      </div>

      <div style={{ marginBottom: '20px' }}>
        <label style={{ display: 'block', marginBottom: '8px', fontWeight: 'bold' }}>
          –¶–µ–ª–µ–≤–∞—è –¥–∞—Ç–∞ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏:
        </label>
        <input 
          type="date"
          value={targetDate}
          onChange={(e) => setTargetDate(e.target.value)}
          disabled={isProcessing}
          style={{
            padding: '8px',
            fontSize: '16px',
            borderRadius: '5px',
            border: '1px solid #ccc',
            marginRight: '10px'
          }}
        />
      </div>

      <button 
        onClick={analyzeAndFixDates}
        disabled={isProcessing}
        style={{
          padding: '10px 20px',
          fontSize: '16px',
          backgroundColor: isProcessing ? '#ccc' : '#2196f3',
          color: 'white',
          border: 'none',
          borderRadius: '5px',
          cursor: isProcessing ? 'not-allowed' : 'pointer',
          marginBottom: '20px'
        }}
      >
        {isProcessing ? '‚è≥ –ê–Ω–∞–ª–∏–∑ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞...' : 'üîç –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏ –∏—Å–ø—Ä–∞–≤–∏—Ç—å'}
      </button>

      {fixedCount > 0 && (
        <div style={{
          background: '#d4edda',
          border: '1px solid #28a745',
          borderRadius: '8px',
          padding: '15px',
          marginBottom: '20px'
        }}>
          <h3>‚úÖ –£—Å–ø–µ—à–Ω–æ!</h3>
          <p>–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: <strong>{fixedCount}</strong></p>
          <p>–û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è.</p>
        </div>
      )}

      {logs.length > 0 && (
        <div style={{
          background: '#f8f9fa',
          border: '1px solid #dee2e6',
          borderRadius: '8px',
          padding: '15px',
          fontFamily: 'monospace',
          fontSize: '12px',
          maxHeight: '500px',
          overflow: 'auto'
        }}>
          <h3>üìã –õ–æ–≥ –æ–ø–µ—Ä–∞—Ü–∏–π:</h3>
          {logs.map((log, index) => (
            <div key={index} style={{ marginBottom: '5px', whiteSpace: 'pre-wrap' }}>
              {log}
            </div>
          ))}
        </div>
      )}
    </div>
  )
}