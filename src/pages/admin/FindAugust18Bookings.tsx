import React, { useState } from 'react'
import { useAuth } from '../../contexts/AuthContext'
import { 
  collection, 
  query, 
  getDocs,
  updateDoc,
  doc,
  Timestamp
} from 'firebase/firestore'
import { db } from '../../services/firebase'

export default function FindAugust18Bookings() {
  const { admin, club } = useAuth()
  const [isProcessing, setIsProcessing] = useState(false)
  const [logs, setLogs] = useState<string[]>([])
  const [august18Bookings, setAugust18Bookings] = useState<any[]>([])
  const [selectedBookings, setSelectedBookings] = useState<Set<string>>(new Set())

  const addLog = (message: string) => {
    setLogs(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`])
    console.log(message)
  }

  const findAugust18Bookings = async () => {
    if (!admin) {
      addLog('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É')
      return
    }

    setIsProcessing(true)
    setLogs([])
    setAugust18Bookings([])
    setSelectedBookings(new Set())
    
    addLog('üîç –ò—â–µ–º –≤—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ 18 –∞–≤–≥—É—Å—Ç–∞ –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞...')
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      const bookingsRef = collection(db, 'bookings')
      const snapshot = await getDocs(bookingsRef)
      
      addLog(`üìä –ù–∞–π–¥–µ–Ω–æ –≤—Å–µ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: ${snapshot.size}`)
      
      const found: any[] = []
      
      for (const docSnap of snapshot.docs) {
        const data = docSnap.data()
        const bookingId = docSnap.id
        
        if (data.date) {
          const bookingDate = data.date.toDate ? data.date.toDate() : new Date(data.date)
          const clubTimezone = club?.timezone || 'Asia/Yekaterinburg'
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞
          const clubDateStr = new Intl.DateTimeFormat('en-CA', {
            timeZone: clubTimezone,
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
          }).format(bookingDate)
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–∞—Ç–∞ 18 –∞–≤–≥—É—Å—Ç–∞ 2025 –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞
          if (clubDateStr === '2025-08-18') {
            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Ä—É—Å—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
            const displayDate = new Intl.DateTimeFormat('ru-RU', {
              timeZone: clubTimezone,
              day: 'numeric',
              month: 'long',
              year: 'numeric'
            }).format(bookingDate)
            
            const moscowDateStr = new Intl.DateTimeFormat('en-CA', {
              timeZone: 'Europe/Moscow',
              year: 'numeric',
              month: '2-digit',
              day: '2-digit'
            }).format(bookingDate)
            
            const yekaterinburgDateStr = new Intl.DateTimeFormat('en-CA', {
              timeZone: 'Asia/Yekaterinburg',
              year: 'numeric',
              month: '2-digit',
              day: '2-digit'
            }).format(bookingDate)
            
            found.push({
              id: bookingId,
              customerName: data.customerName || data.clientName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
              time: data.startTime || data.time || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
              dateISO: bookingDate.toISOString(),
              displayDate: displayDate,
              clubDate: clubDateStr,
              moscowDate: moscowDateStr,
              yekaterinburgDate: yekaterinburgDateStr,
              rawData: data
            })
          }
        }
      }
      
      setAugust18Bookings(found)
      
      if (found.length > 0) {
        addLog(`\n‚úÖ –ù–∞–π–¥–µ–Ω–æ ${found.length} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –Ω–∞ 18 –∞–≤–≥—É—Å—Ç–∞:`)
        
        found.forEach((booking, index) => {
          addLog(`\nüìå –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ${index + 1}:`)
          addLog(`   ID: ${booking.id}`)
          addLog(`   –ö–ª–∏–µ–Ω—Ç: ${booking.customerName}`)
          addLog(`   –í—Ä–µ–º—è: ${booking.time}`)
          addLog(`   –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫: ${booking.displayDate}`)
          addLog(`   UTC: ${booking.dateISO}`)
          addLog(`   –í —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞: ${booking.clubDate}`)
          addLog(`   –í –ú–æ—Å–∫–≤–µ: ${booking.moscowDate}`)
          addLog(`   –í –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ: ${booking.yekaterinburgDate}`)
        })
      } else {
        addLog('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –Ω–∞ 18 –∞–≤–≥—É—Å—Ç–∞')
      }
      
    } catch (error) {
      console.error('Error finding bookings:', error)
      addLog(`‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
    } finally {
      setIsProcessing(false)
    }
  }

  const handleSelectBooking = (bookingId: string) => {
    const newSelected = new Set(selectedBookings)
    if (newSelected.has(bookingId)) {
      newSelected.delete(bookingId)
    } else {
      newSelected.add(bookingId)
    }
    setSelectedBookings(newSelected)
  }

  const handleSelectAll = () => {
    if (selectedBookings.size === august18Bookings.length) {
      setSelectedBookings(new Set())
    } else {
      setSelectedBookings(new Set(august18Bookings.map(b => b.id)))
    }
  }

  const fixBookings = async () => {
    if (selectedBookings.size === 0) {
      addLog('‚ùå –ù–µ –≤—ã–±—Ä–∞–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è')
      return
    }

    setIsProcessing(true)
    addLog(`\nüîß –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ${selectedBookings.size} –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...`)

    try {
      const updates: Promise<void>[] = []
      const clubTimezone = club?.timezone || 'Asia/Yekaterinburg'
      const selectedBookingsList = august18Bookings.filter(b => selectedBookings.has(b.id))
      
      for (const booking of selectedBookingsList) {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–º–µ—â–µ–Ω–∏–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
        let offsetHours = 5 // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–∞
        if (clubTimezone === 'Europe/Moscow') offsetHours = 3
        
        // –°–æ–∑–¥–∞–µ–º Timestamp –¥–ª—è 18 –∞–≤–≥—É—Å—Ç–∞ 2025 –≤ –ø–æ–ª–Ω–æ—á—å UTC
        // –≠—Ç–æ –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –∫–∞–∫ 18 –∞–≤–≥—É—Å—Ç–∞ –≤–µ–∑–¥–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
        const correctedDate = new Date(Date.UTC(2025, 7, 18, 0, 0, 0, 0))
        
        addLog(`\nüîÑ –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ${booking.id}`)
        addLog(`   –ë—ã–ª–æ: ${booking.dateISO}`)
        addLog(`   –ë—É–¥–µ—Ç: ${correctedDate.toISOString()}`)
        
        const updateData: any = {
          date: Timestamp.fromDate(correctedDate),
          _dateFixedManual: true,
          _dateFixedAt: Timestamp.now()
        }
        
        if (admin?.uid) {
          updateData._dateFixedBy = admin.uid
        }
        
        const updatePromise = updateDoc(doc(db, 'bookings', booking.id), updateData)
        updates.push(updatePromise)
      }
      
      await Promise.all(updates)
      addLog(`\n‚úÖ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${selectedBookings.size} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π!`)
      addLog('üîÑ –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∫–∞–ª–µ–Ω–¥–∞—Ä–µ–º, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è')
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
      setSelectedBookings(new Set())
      
    } catch (error) {
      console.error('Error fixing bookings:', error)
      addLog(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
    } finally {
      setIsProcessing(false)
    }
  }

  if (!admin) {
    return (
      <div style={{ padding: '20px' }}>
        <h2>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h2>
        <p>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</p>
      </div>
    )
  }

  return (
    <div style={{ padding: '20px', maxWidth: '900px', margin: '0 auto' }}>
      <h2>üîç –ü–æ–∏—Å–∫ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –Ω–∞ 18 –∞–≤–≥—É—Å—Ç–∞</h2>
      
      <div style={{ 
        background: '#e3f2fd', 
        border: '1px solid #2196f3',
        borderRadius: '8px',
        padding: '15px',
        marginBottom: '20px'
      }}>
        <h3>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
        <p>–≠—Ç–∞ —É—Ç–∏–ª–∏—Ç–∞ –Ω–∞—Ö–æ–¥–∏—Ç –≤—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ 18 –∞–≤–≥—É—Å—Ç–∞ 2025 –≥–æ–¥–∞ –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞</p>
        <p>–∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±–æ—Ä–æ—á–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∏—Ö –¥–∞—Ç—ã –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ.</p>
        <p><strong>–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</strong> –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.</p>
      </div>

      <div style={{ marginBottom: '20px' }}>
        <button 
          onClick={findAugust18Bookings}
          disabled={isProcessing}
          style={{
            padding: '10px 20px',
            fontSize: '16px',
            backgroundColor: isProcessing ? '#ccc' : '#2196f3',
            color: 'white',
            border: 'none',
            borderRadius: '5px',
            cursor: isProcessing ? 'not-allowed' : 'pointer',
            marginRight: '10px'
          }}
        >
          {isProcessing ? '‚è≥ –ü–æ–∏—Å–∫...' : 'üîç –ù–∞–π—Ç–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ 18 –∞–≤–≥—É—Å—Ç–∞'}
        </button>

        {august18Bookings.length > 0 && (
          <>
            <button 
              onClick={handleSelectAll}
              disabled={isProcessing}
              style={{
                padding: '10px 20px',
                fontSize: '16px',
                backgroundColor: isProcessing ? '#ccc' : '#2196f3',
                color: 'white',
                border: 'none',
                borderRadius: '5px',
                cursor: isProcessing ? 'not-allowed' : 'pointer',
                marginRight: '10px'
              }}
            >
              {selectedBookings.size === august18Bookings.length ? '‚ùå –°–Ω—è—Ç—å –≤—ã–±–æ—Ä' : '‚òëÔ∏è –í—ã–±—Ä–∞—Ç—å –≤—Å–µ'}
            </button>
            
            <button 
              onClick={fixBookings}
              disabled={isProcessing || selectedBookings.size === 0}
              style={{
                padding: '10px 20px',
                fontSize: '16px',
                backgroundColor: isProcessing || selectedBookings.size === 0 ? '#ccc' : '#4caf50',
                color: 'white',
                border: 'none',
                borderRadius: '5px',
                cursor: isProcessing || selectedBookings.size === 0 ? 'not-allowed' : 'pointer'
              }}
            >
              {isProcessing ? '‚è≥ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...' : `‚úÖ –ò—Å–ø—Ä–∞–≤–∏—Ç—å ${selectedBookings.size} –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö`}
            </button>
          </>
        )}
      </div>

      {august18Bookings.length > 0 && (
        <div style={{
          background: '#fff3cd',
          border: '1px solid #ffc107',
          borderRadius: '8px',
          padding: '15px',
          marginBottom: '20px'
        }}>
          <h3>üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ 18 –∞–≤–≥—É—Å—Ç–∞:</h3>
          <div style={{ maxHeight: '300px', overflow: 'auto' }}>
            <table style={{ width: '100%', borderCollapse: 'collapse' }}>
              <thead>
                <tr style={{ borderBottom: '2px solid #ddd' }}>
                  <th style={{ padding: '8px', textAlign: 'center', width: '40px' }}>
                    <input
                      type="checkbox"
                      checked={selectedBookings.size === august18Bookings.length && august18Bookings.length > 0}
                      onChange={handleSelectAll}
                      style={{ cursor: 'pointer' }}
                    />
                  </th>
                  <th style={{ padding: '8px', textAlign: 'left' }}>–ö–ª–∏–µ–Ω—Ç</th>
                  <th style={{ padding: '8px', textAlign: 'left' }}>–í—Ä–µ–º—è</th>
                  <th style={{ padding: '8px', textAlign: 'left' }}>–î–∞—Ç–∞ (–∫–ª—É–±)</th>
                  <th style={{ padding: '8px', textAlign: 'left' }}>UTC</th>
                </tr>
              </thead>
              <tbody>
                {august18Bookings.map((booking, index) => (
                  <tr 
                    key={booking.id} 
                    style={{ 
                      borderBottom: '1px solid #eee',
                      backgroundColor: selectedBookings.has(booking.id) ? '#e3f2fd' : 'transparent',
                      cursor: 'pointer'
                    }}
                    onClick={() => handleSelectBooking(booking.id)}
                  >
                    <td style={{ padding: '8px', textAlign: 'center' }}>
                      <input
                        type="checkbox"
                        checked={selectedBookings.has(booking.id)}
                        onChange={() => handleSelectBooking(booking.id)}
                        style={{ cursor: 'pointer' }}
                      />
                    </td>
                    <td style={{ padding: '8px' }}>{booking.customerName}</td>
                    <td style={{ padding: '8px' }}>{booking.time}</td>
                    <td style={{ padding: '8px' }}>{booking.displayDate}</td>
                    <td style={{ padding: '8px', fontSize: '11px' }}>{booking.dateISO}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}

      {logs.length > 0 && (
        <div style={{
          background: '#f8f9fa',
          border: '1px solid #dee2e6',
          borderRadius: '8px',
          padding: '15px',
          fontFamily: 'monospace',
          fontSize: '12px',
          maxHeight: '400px',
          overflow: 'auto'
        }}>
          <h3>üìã –õ–æ–≥ –æ–ø–µ—Ä–∞—Ü–∏–π:</h3>
          {logs.map((log, index) => (
            <div key={index} style={{ marginBottom: '5px', whiteSpace: 'pre-wrap' }}>
              {log}
            </div>
          ))}
        </div>
      )}
    </div>
  )
}