import React, { useState } from 'react'
import { useAuth } from '../../contexts/AuthContext'
import { 
  collection, 
  query, 
  getDocs,
  updateDoc,
  doc,
  Timestamp 
} from 'firebase/firestore'
import { db } from '../../services/firebase'

export default function FixBookingDates() {
  const { admin } = useAuth()
  const [isProcessing, setIsProcessing] = useState(false)
  const [logs, setLogs] = useState<string[]>([])
  const [fixedCount, setFixedCount] = useState(0)

  const addLog = (message: string) => {
    setLogs(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`])
    console.log(message)
  }

  const fixBookingDates = async () => {
    if (!admin || admin.role !== 'superadmin') {
      addLog('‚ùå –¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç—É –æ–ø–µ—Ä–∞—Ü–∏—é')
      return
    }

    setIsProcessing(true)
    setLogs([])
    setFixedCount(0)
    
    addLog('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫—É –¥–∞—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...')
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      const bookingsRef = collection(db, 'bookings')
      const snapshot = await getDocs(bookingsRef)
      
      addLog(`üìä –ù–∞–π–¥–µ–Ω–æ –≤—Å–µ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: ${snapshot.size}`)
      
      let fixed = 0
      const updates: Promise<void>[] = []
      
      for (const docSnap of snapshot.docs) {
        const data = docSnap.data()
        const bookingId = docSnap.id
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        if (data.date) {
          const bookingDate = data.date.toDate ? data.date.toDate() : new Date(data.date)
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞
          const dateInMoscow = new Intl.DateTimeFormat('en-CA', {
            timeZone: 'Europe/Moscow',
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
          }).format(bookingDate)
          
          const dateInYekaterinburg = new Intl.DateTimeFormat('en-CA', {
            timeZone: 'Asia/Yekaterinburg',
            year: 'numeric',
            month: '2-digit',
            day: '2-digit'
          }).format(bookingDate)
          
          // –¢–û–õ–¨–ö–û –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã 18 –∞–≤–≥—É—Å—Ç–∞,
          // –Ω–æ –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∞—Ç–æ–π
          let needsFix = false
          let correctedDate: Date | null = null
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ 18 –∞–≤–≥—É—Å—Ç–∞
          const createdAt = data.createdAt?.toDate ? data.createdAt.toDate() : null
          if (createdAt) {
            const createdDateStr = new Intl.DateTimeFormat('en-CA', {
              timeZone: 'Asia/Yekaterinburg',
              year: 'numeric',
              month: '2-digit',
              day: '2-digit'
            }).format(createdAt)
            
            // –ï—Å–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ 18 –∞–≤–≥—É—Å—Ç–∞
            if (createdDateStr === '2025-08-18') {
              // –ò –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫ 19 –∞–≤–≥—É—Å—Ç–∞ –≤ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥–µ
              if (dateInYekaterinburg === '2025-08-19') {
                needsFix = true
                // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É - –≤—ã—á–∏—Ç–∞–µ–º —á–∞—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –∫–∞–∫ —Å–æ—Ö—Ä–∞–Ω–∏–ª–æ—Å—å
                if (dateInMoscow === '2025-08-18') {
                  // –ï—Å–ª–∏ –≤ –ú–æ—Å–∫–≤–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 18, –∞ –≤ –ï–∫–± 19 - –≤—ã—á–∏—Ç–∞–µ–º 5 —á–∞—Å–æ–≤
                  correctedDate = new Date(bookingDate.getTime() - 5 * 60 * 60 * 1000)
                } else if (dateInMoscow === '2025-08-19') {
                  // –ï—Å–ª–∏ –∏ –≤ –ú–æ—Å–∫–≤–µ –∏ –≤ –ï–∫–± –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 19 - –≤—ã—á–∏—Ç–∞–µ–º 24 —á–∞—Å–∞
                  correctedDate = new Date(bookingDate.getTime() - 24 * 60 * 60 * 1000)
                }
              }
              // –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ —É–∂–µ –±—ã–ª–∞ –ø–æ–ø—ã—Ç–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
              else if (!data._dateFixed && dateInMoscow === '2025-08-19') {
                needsFix = true
                correctedDate = new Date(bookingDate.getTime() - 3 * 60 * 60 * 1000)
              }
            }
          }
          
          if (needsFix && correctedDate) {
            addLog(`üîç –ù–∞–π–¥–µ–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏: ${bookingId}`)
            addLog(`   –ö–ª–∏–µ–Ω—Ç: ${data.customerName || data.clientName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`)
            addLog(`   –í—Ä–µ–º—è: ${data.startTime || data.time || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`)
            addLog(`   –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ UTC: ${bookingDate.toISOString()}`)
            addLog(`   –î–∞—Ç–∞ –≤ Moscow: ${dateInMoscow}`)
            addLog(`   –î–∞—Ç–∞ –≤ Yekaterinburg: ${dateInYekaterinburg}`)
            addLog(`   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –Ω–∞: ${correctedDate.toISOString()}`)
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            const updateData: any = {
              date: Timestamp.fromDate(correctedDate),
              _dateFixed: true,
              _dateFixedAt: Timestamp.now()
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º uid —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
            if (admin?.uid) {
              updateData._dateFixedBy = admin.uid
            }
            
            const updatePromise = updateDoc(doc(db, 'bookings', bookingId), updateData)
            
            updates.push(updatePromise)
            fixed++
          }
        }
      }
      
      if (updates.length > 0) {
        addLog(`\nüîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ${fixed} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...`)
        await Promise.all(updates)
        setFixedCount(fixed)
        addLog(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ ${fixed} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π!`)
      } else {
        addLog('‚úÖ –ù–µ –Ω–∞–π–¥–µ–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π, —Ç—Ä–µ–±—É—é—â–∏—Ö –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏')
      }
      
    } catch (error) {
      console.error('Error fixing booking dates:', error)
      addLog(`‚ùå –û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
    } finally {
      setIsProcessing(false)
    }
  }

  if (!admin || admin.role !== 'superadmin') {
    return (
      <div style={{ padding: '20px' }}>
        <h2>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h2>
        <p>–¢–æ–ª—å–∫–æ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é</p>
      </div>
    )
  }

  return (
    <div style={{ padding: '20px', maxWidth: '800px', margin: '0 auto' }}>
      <h2>üîß –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π</h2>
      
      <div style={{ 
        background: '#fff3cd', 
        border: '1px solid #ffc107',
        borderRadius: '8px',
        padding: '15px',
        marginBottom: '20px'
      }}>
        <h3>‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ!</h3>
        <p>–≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–∏—Ç –¥–∞—Ç—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã 18 –∞–≤–≥—É—Å—Ç–∞ 2025,</p>
        <p>–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–∞–∫ 19 –∞–≤–≥—É—Å—Ç–∞ –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏.</p>
        <p><strong>–ë—É–¥—É—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–µ–≥–æ–¥–Ω—è (18 –∞–≤–≥—É—Å—Ç–∞).</strong></p>
      </div>

      <button 
        onClick={fixBookingDates}
        disabled={isProcessing}
        style={{
          padding: '10px 20px',
          fontSize: '16px',
          backgroundColor: isProcessing ? '#ccc' : '#007bff',
          color: 'white',
          border: 'none',
          borderRadius: '5px',
          cursor: isProcessing ? 'not-allowed' : 'pointer',
          marginBottom: '20px'
        }}
      >
        {isProcessing ? '‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞...' : 'üöÄ –ù–∞—á–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫—É'}
      </button>

      {fixedCount > 0 && (
        <div style={{
          background: '#d4edda',
          border: '1px solid #28a745',
          borderRadius: '8px',
          padding: '15px',
          marginBottom: '20px'
        }}>
          <h3>‚úÖ –£—Å–ø–µ—à–Ω–æ!</h3>
          <p>–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: <strong>{fixedCount}</strong></p>
        </div>
      )}

      {logs.length > 0 && (
        <div style={{
          background: '#f8f9fa',
          border: '1px solid #dee2e6',
          borderRadius: '8px',
          padding: '15px',
          fontFamily: 'monospace',
          fontSize: '12px',
          maxHeight: '400px',
          overflow: 'auto'
        }}>
          <h3>üìã –õ–æ–≥ –æ–ø–µ—Ä–∞—Ü–∏–π:</h3>
          {logs.map((log, index) => (
            <div key={index} style={{ marginBottom: '5px' }}>
              {log}
            </div>
          ))}
        </div>
      )}
    </div>
  )
}