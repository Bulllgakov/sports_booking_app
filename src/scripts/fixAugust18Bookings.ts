import { initializeApp } from 'firebase/app'
import { 
  getFirestore, 
  collection, 
  query, 
  where, 
  getDocs,
  updateDoc,
  doc,
  Timestamp 
} from 'firebase/firestore'

// Firebase –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const firebaseConfig = {
  apiKey: "AIzaSyD0rNKhhOlx1P65C0vuQmpq7BZAx4962gc",
  authDomain: "sports-booking-app-1d7e5.firebaseapp.com",
  projectId: "sports-booking-app-1d7e5",
  storageBucket: "sports-booking-app-1d7e5.appspot.com",
  messagingSenderId: "681253662878",
  appId: "1:681253662878:web:e0e7e9f14c66da80e0f42c",
  measurementId: "G-7G8GCFZ8TZ"
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
const app = initializeApp(firebaseConfig)
const db = getFirestore(app)

async function fixBookingDates() {
  console.log('–ù–∞—á–∏–Ω–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫—É –¥–∞—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...')
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    const bookingsRef = collection(db, 'bookings')
    const snapshot = await getDocs(bookingsRef)
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ –≤—Å–µ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π: ${snapshot.size}`)
    
    let fixedCount = 0
    const updates: Promise<void>[] = []
    
    snapshot.forEach((docSnap) => {
      const data = docSnap.data()
      const bookingId = docSnap.id
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      if (data.date) {
        const bookingDate = data.date.toDate ? data.date.toDate() : new Date(data.date)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞—Ç—É –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ –∫–ª—É–±–∞ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º Europe/Moscow –∏–ª–∏ Asia/Yekaterinburg)
        const dateInMoscow = new Intl.DateTimeFormat('en-CA', {
          timeZone: 'Europe/Moscow',
          year: 'numeric',
          month: '2-digit',
          day: '2-digit'
        }).format(bookingDate)
        
        const dateInYekaterinburg = new Intl.DateTimeFormat('en-CA', {
          timeZone: 'Asia/Yekaterinburg',
          year: 'numeric',
          month: '2-digit',
          day: '2-digit'
        }).format(bookingDate)
        
        // –ï—Å–ª–∏ –¥–∞—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 19 –∞–≤–≥—É—Å—Ç–∞, –Ω–æ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å 18 –∞–≤–≥—É—Å—Ç–∞
        if (dateInMoscow === '2025-08-19' || dateInYekaterinburg === '2025-08-19') {
          console.log(`–ù–∞–π–¥–µ–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏: ${bookingId}`)
          console.log(`  –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ UTC: ${bookingDate.toISOString()}`)
          console.log(`  –î–∞—Ç–∞ –≤ Moscow: ${dateInMoscow}`)
          console.log(`  –î–∞—Ç–∞ –≤ Yekaterinburg: ${dateInYekaterinburg}`)
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ —ç—Ç–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å (–µ—Å–ª–∏ –≤—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ 18 –∞–≤–≥—É—Å—Ç–∞)
          const createdAt = data.createdAt?.toDate ? data.createdAt.toDate() : null
          if (createdAt) {
            const createdDateStr = new Intl.DateTimeFormat('en-CA', {
              timeZone: 'Europe/Moscow',
              year: 'numeric',
              month: '2-digit',
              day: '2-digit'
            }).format(createdAt)
            
            // –ï—Å–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ 18 –∞–≤–≥—É—Å—Ç–∞, –Ω–æ –¥–∞—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 19 –∞–≤–≥—É—Å—Ç–∞
            if (createdDateStr === '2025-08-18') {
              // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É - –≤—ã—á–∏—Ç–∞–µ–º 24 —á–∞—Å–∞
              const correctedDate = new Date(bookingDate.getTime() - 24 * 60 * 60 * 1000)
              
              console.log(`  –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –Ω–∞: ${correctedDate.toISOString()}`)
              
              // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
              const updatePromise = updateDoc(doc(db, 'bookings', bookingId), {
                date: Timestamp.fromDate(correctedDate),
                _dateFixed: true,
                _dateFixedAt: Timestamp.now()
              })
              
              updates.push(updatePromise)
              fixedCount++
            }
          }
        }
      }
    })
    
    if (updates.length > 0) {
      console.log(`\n–ò—Å–ø—Ä–∞–≤–ª—è–µ–º ${fixedCount} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...`)
      await Promise.all(updates)
      console.log('‚úÖ –í—Å–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!')
    } else {
      console.log('‚úÖ –ù–µ –Ω–∞–π–¥–µ–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π, —Ç—Ä–µ–±—É—é—â–∏—Ö –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏')
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π:', error)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫—É
fixBookingDates()
  .then(() => {
    console.log('\nüéâ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω')
    process.exit(0)
  })
  .catch((error) => {
    console.error('‚ùå –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π:', error)
    process.exit(1)
  })