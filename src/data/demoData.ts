// –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∞–¥–º–∏–Ω–∫–∏

export const DEMO_ADMIN = {
  name: '–î–µ–º–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
  email: 'demo@allcourt.ru',
  role: 'admin' as const,
  venueId: 'demo-venue',
  permissions: ['view_bookings', 'manage_courts', 'manage_prices', 'view_analytics']
}

export const DEMO_CLUB = {
  id: 'demo-venue',
  name: 'SmartPadel Demo Club',
  address: '—É–ª. –ü—Ä–æ—Ñ—Å–æ—é–∑–Ω–∞—è, 69, –ú–æ—Å–∫–≤–∞',
  phone: '+7 (495) 123-45-67',
  email: 'info@smartpadel-demo.ru',
  description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–ª—É–± –ø–∞–¥–µ–ª–∞ —Å 8 –∫–æ—Ä—Ç–∞–º–∏. –≠—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º —Å–∏—Å—Ç–µ–º—ã.',
  logoUrl: '',
  amenities: ['–ü–∞—Ä–∫–æ–≤–∫–∞', '–î—É—à–µ–≤—ã–µ', '–ö–∞—Ñ–µ', '–ü—Ä–æ–∫–∞—Ç –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è', '–ú–∞–≥–∞–∑–∏–Ω'],
  organizationType: '–û–û–û',
  inn: '7712345678',
  bankAccount: '40702810123450000001',
  subscription: {
    plan: 'STANDARD',
    status: 'active',
    startDate: new Date('2024-01-01'),
    endDate: new Date('2024-12-31'),
    usage: {
      courtsCount: 8,
      bookingsThisMonth: 247,
      smsEmailsSent: 512,
      lastUpdated: new Date()
    }
  }
}

export const DEMO_COURTS = [
  {
    id: 'court-1',
    venueId: 'demo-venue',
    name: '–ö–æ—Ä—Ç 1 - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π',
    type: 'padel',
    surface: '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è —Ç—Ä–∞–≤–∞',
    indoor: true,
    lighting: true,
    pricePerHour: {
      default: 2500,
      morning: 2000,
      evening: 3000,
      weekend: 3500
    },
    amenities: ['–û—Å–≤–µ—â–µ–Ω–∏–µ', '–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä', '–¢—Ä–∏–±—É–Ω—ã'],
    description: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –∫–æ—Ä—Ç —Å —Ç—Ä–∏–±—É–Ω–∞–º–∏ –Ω–∞ 50 –º–µ—Å—Ç',
    isActive: true
  },
  {
    id: 'court-2',
    venueId: 'demo-venue',
    name: '–ö–æ—Ä—Ç 2',
    type: 'padel',
    surface: '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è —Ç—Ä–∞–≤–∞',
    indoor: true,
    lighting: true,
    pricePerHour: {
      default: 2000,
      morning: 1500,
      evening: 2500,
      weekend: 3000
    },
    amenities: ['–û—Å–≤–µ—â–µ–Ω–∏–µ', '–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä'],
    isActive: true
  },
  {
    id: 'court-3',
    venueId: 'demo-venue',
    name: '–ö–æ—Ä—Ç 3',
    type: 'padel',
    surface: '–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è —Ç—Ä–∞–≤–∞',
    indoor: true,
    lighting: true,
    pricePerHour: {
      default: 2000,
      morning: 1500,
      evening: 2500,
      weekend: 3000
    },
    amenities: ['–û—Å–≤–µ—â–µ–Ω–∏–µ', '–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä'],
    isActive: true
  },
  {
    id: 'court-4',
    venueId: 'demo-venue',
    name: '–¢–µ–Ω–Ω–∏—Å–Ω—ã–π –∫–æ—Ä—Ç 1',
    type: 'tennis',
    surface: '–•–∞—Ä–¥',
    indoor: false,
    lighting: true,
    pricePerHour: {
      default: 1500,
      morning: 1000,
      evening: 2000,
      weekend: 2500
    },
    amenities: ['–û—Å–≤–µ—â–µ–Ω–∏–µ'],
    isActive: true
  },
  {
    id: 'court-5',
    venueId: 'demo-venue',
    name: '–ë–∞–¥–º–∏–Ω—Ç–æ–Ω –ó–∞–ª 1',
    type: 'badminton',
    surface: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –ø–∞—Ä–∫–µ—Ç',
    indoor: true,
    lighting: true,
    pricePerHour: {
      default: 800,
      morning: 600,
      evening: 1000,
      weekend: 1200
    },
    amenities: ['–ö–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä', '–†–∞–∑–¥–µ–≤–∞–ª–∫–∏'],
    description: '–ó–∞–ª —Å 4 –±–∞–¥–º–∏–Ω—Ç–æ–Ω–Ω—ã–º–∏ –∫–æ—Ä—Ç–∞–º–∏',
    isActive: true
  }
]

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
const generateBookings = () => {
  const bookings = []
  const customers = [
    { id: 'cust-1', name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', phone: '+7 (925) 123-45-67', email: 'ivan@example.com' },
    { id: 'cust-2', name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', phone: '+7 (926) 234-56-78', email: 'maria@example.com' },
    { id: 'cust-3', name: '–ê–ª–µ–∫—Å–µ–π –ò–≤–∞–Ω–æ–≤', phone: '+7 (927) 345-67-89', email: 'alexey@example.com' },
    { id: 'cust-4', name: '–ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞', phone: '+7 (928) 456-78-90', email: 'elena@example.com' },
    { id: 'cust-5', name: '–î–º–∏—Ç—Ä–∏–π –ù–æ–≤–∏–∫–æ–≤', phone: '+7 (929) 567-89-01', email: 'dmitry@example.com' }
  ]
  
  const statuses = ['confirmed', 'confirmed', 'confirmed', 'pending', 'cancelled']
  const today = new Date()
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä–µ–¥
  for (let dayOffset = 0; dayOffset < 7; dayOffset++) {
    const date = new Date(today)
    date.setDate(date.getDate() + dayOffset)
    
    // 10-20 –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –≤ –¥–µ–Ω—å
    const bookingsPerDay = Math.floor(Math.random() * 10) + 10
    
    for (let i = 0; i < bookingsPerDay; i++) {
      const customer = customers[Math.floor(Math.random() * customers.length)]
      const court = DEMO_COURTS[Math.floor(Math.random() * DEMO_COURTS.length)]
      const hour = Math.floor(Math.random() * 12) + 8 // 8:00 - 20:00
      const duration = Math.random() > 0.7 ? 2 : 1 // 70% - 1 —á–∞—Å, 30% - 2 —á–∞—Å–∞
      
      const startTime = new Date(date)
      startTime.setHours(hour, 0, 0, 0)
      
      const endTime = new Date(startTime)
      endTime.setHours(hour + duration)
      
      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–Ω—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏
      let price = court.pricePerHour.default
      if (hour < 12) price = court.pricePerHour.morning
      else if (hour >= 18) price = court.pricePerHour.evening
      if (date.getDay() === 0 || date.getDay() === 6) price = court.pricePerHour.weekend
      
      bookings.push({
        id: `booking-${date.toISOString().split('T')[0]}-${i}`,
        venueId: 'demo-venue',
        courtId: court.id,
        courtName: court.name,
        customerId: customer.id,
        customerName: customer.name,
        customerPhone: customer.phone,
        customerEmail: customer.email,
        date: date.toISOString().split('T')[0],
        startTime: startTime,
        endTime: endTime,
        duration: duration,
        price: price * duration,
        status: statuses[Math.floor(Math.random() * statuses.length)],
        paymentStatus: Math.random() > 0.2 ? 'paid' : 'pending',
        paymentMethod: Math.random() > 0.5 ? 'online' : 'cash',
        notes: Math.random() > 0.8 ? '–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç' : '',
        createdAt: new Date(date.getTime() - Math.random() * 7 * 24 * 60 * 60 * 1000) // –°–æ–∑–¥–∞–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ –¥–æ –∏–≥—Ä—ã
      })
    }
  }
  
  return bookings.sort((a, b) => a.startTime.getTime() - b.startTime.getTime())
}

export const DEMO_BOOKINGS = generateBookings()

// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞
export const DEMO_STATS = {
  totalBookings: DEMO_BOOKINGS.filter(b => b.status === 'confirmed').length,
  totalRevenue: DEMO_BOOKINGS.filter(b => b.status === 'confirmed').reduce((sum, b) => sum + b.price, 0),
  totalCustomers: new Set(DEMO_BOOKINGS.map(b => b.customerId)).size,
  averageOccupancy: 68,
  monthlyGrowth: 23,
  popularTimes: {
    morning: 45,
    afternoon: 78,
    evening: 92
  },
  courtUtilization: DEMO_COURTS.map(court => ({
    courtId: court.id,
    courtName: court.name,
    utilization: Math.floor(Math.random() * 30) + 60 // 60-90%
  }))
}

// –î–µ–º–æ-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
export const DEMO_NOTIFICATION = {
  show: true,
  message: 'üéæ –≠—Ç–æ –¥–µ–º–æ-–≤–µ—Ä—Å–∏—è —Å–∏—Å—Ç–µ–º—ã. –í—Å–µ –¥–∞–Ω–Ω—ã–µ —è–≤–ª—è—é—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–º–∏. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å.',
  type: 'info'
}